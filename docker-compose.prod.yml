version: '3.8'

services:
  web:
    # Берем Dockerfile из каталога app
    build:
       context: ./s_server
       dockerfile: Dockerfile.prod
    # Запускаем сервер gunicorn
    command: gunicorn main:web_app --bind 0.0.0.0:8080 --worker-class aiohttp.GunicornWebWorker
    #command: python manage.py runserver 0.0.0.0:8000
    # Открываем порт 8000 наружy
    expose:
      - 8080
    # Файл содержащий переменные для контейнера
    env_file:
      - ./.env.prod
    depends_on:
      - db
  db:
    # Образ и версия базы, которую мы будем использовать
    image: postgres:12.0-alpine
    # Внешний том(volume) и место где он будет подключен внутри контейнера
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
      
  nginx:
    build: ./nginx 
    ports:
      - 8200:80
    depends_on:
      - web    
      
volumes:
  postgres_volume:
